@import '@elastic/eui/src/global_styling/mixins/helpers';
@import '@elastic/eui/src/components/table/mixins';
@import '@elastic/eui/src/global_styling/index';

.container {
  @include euiScrollBar;

  display: flex;
  flex: 1;
  width: 100%;
  padding: 16px;
  overflow-y: auto;
  overflow-x: auto;
  background-color: var(--euiColorEmptyShade);
  color: var(--euiTextSubduedColor);
  position: relative;

  input {
    font-family: 'Graphik', sans-serif !important;
  }

  :global {
    .euiFieldText {
      font-size: 13px !important;
      max-width: initial !important;
      height: 26px !important;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      &.withoutBorder {
        &:not(:focus) {
          background-color: inherit;
          box-shadow: none !important;
        }
      }
    }

    .euiFormControlLayout {
      height: 24px !important;
    }
  }
}

.placeholder {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  padding: 12px;
  width: 100%;
}

.jsonData {
  font-size: 14px;
  line-height: 25px;
  font-family: 'Inconsolata', monospace !important;
  letter-spacing: 0.15px;
}

.defaultFont {
  font-family: 'Graphik', sans-serif !important;
}

.jsonData {
  flex-grow: 1;
}

.jsonData input {
  width: 100%;
  min-width: 140px;
}

.jsonButtonStyle {
  height: 17px;
  width: 17px;
  &:hover {
    cursor: pointer;
  }
}

.errorMessage {
  background-color: var(--tableDarkestBorderColor);
  padding: 4px 8px 0 8px;
  width: 100%;
}

.errorMessageForTextArea {
  width: calc(100% - 84px);
}

.controls {
  position: absolute;
  background-color: var(--euiColorLightestShade);
  width: 80px;
  height: 24px !important;

  z-index: 2;

  top: 0;
  left: 100%;
  border-radius: 0 10px 10px 0;

  display: flex;
  align-items: center;
  box-shadow: 0 3px 3px var(--controlsBoxShadowColor);

  :global(.euiButtonIcon) {
    width: 50% !important;
    height: 100% !important;
  }
}

.controlsBottom {
  height: 34px;

  top: 100%;
  right: 0;
  left: auto;
  border-radius: 0 0 10px 10px;
}

.row {
  min-height: 25px;
  position: relative;
  display: flex;
  align-items: flex-end;
  &:before {
    content: '';
    display: block;
    position: absolute;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    margin: 0 -16px;
    z-index: 0;
  }
  &:nth-child(2n) {
    &:before {
      background: var(--browserTableRowEven);
    }
  }
  &:hover {
    &:before {
      background: var(--hoverInListColor);
    }
  }
  > div,
  span,
  button {
    z-index: 1;
  }

  div {
    min-height: 25px;
  }
}

.keyName {
  color: var(--jsonKeyNameColor) !important;
  width: max-content;
  word-break: break-all;
  max-width: 300px;
  box-sizing: content-box;
}

.jsonValue {
  font-size: 14px;
  line-height: 25px;
  font-family: 'Inconsolata', monospace;
  letter-spacing: 0.15px;
  padding: 0 8px;

  max-width: 1000px;
  overflow: hidden;
  text-overflow: ellipsis;

  &:hover {
    outline: 1px solid #b5b6c0;
  }
}

.keyNameArray {
  color: var(--jsonKeyNameArrayColor) !important;
}

.jsonString {
  color: var(--jsonStringColor) !important;
}

.jsonNumber {
  color: var(--jsonNumberColor) !important;
}

.jsonBoolean {
  color: var(--jsonBooleanColor) !important;
}

.jsonNull {
  color: var(--jsonNullColor) !important;
}

.jsonNonStringPrimitive {
  color: var(--jsonNonStringPrimitiveColor) !important;
}

.newValue {
  color: var(--euiColorDanger) !important;
}

.stringStyle {
  word-break: break-all;
}

.quoted {
  &:before,
  &:after {
    content: '"';
  }
}

.actionButtons {
  margin-left: 1em;
  display: flex;
  align-items: center;
  min-width: 48px;
}

.deleteBtn {
  margin-left: 1em;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  min-width: 48px;
}

.declineBtn:hover {
  color: var(--euiColorColorDanger) !important;
}

.applyBtn:hover {
  color: var(--euiColorPrimary) !important;
}

.spinner {
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}
